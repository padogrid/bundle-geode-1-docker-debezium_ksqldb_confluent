#!/usr/bin/env bash
SCRIPT_DIR="$(cd -P -- "$(dirname -- "$0")" && pwd -P)"
. $SCRIPT_DIR/.addonenv.sh

EXECUTABLE="`basename $0`"

if [ "$HELP" == "true" ]; then
cat <<EOF

NAME
   ./$EXECUTABLE - Build the Docker cluster environment

SYNOPSIS
   ./$EXECUTABLE [-?]

DESCRIPTION
   Copies the geode jar files to the 'padogrid' directory which is mounted
   by the Docker Geode connector container."

DEFAULT
   ./$EXECUTABLE

EOF
exit
fi

pushd $APP_DIR > /dev/null

# Change Geode version number in cache-client.xml
VERSION_NUMBER="1.0"

sed -i${__SED_BACKUP} 's/cache-.*.xsd/cache-'${VERSION_NUMBER}'.xsd/' padogrid/etc/client-cache.xml

# Copy the geode and geode-addon jar files
if [ ! -d padogrid/lib ]; then
   mkdir -p padogrid/lib
fi
if [ ! -d padogrid/plugins ]; then
   mkdir -p padogrid/plugins
fi
if [ ! -d padogrid/log ]; then
   mkdir -p padogrid/log
fi
if [ ! -d padogrid/etc ]; then
   mkdir -p padogrid/etc
fi

cp $GEODE_HOME/lib/*.jar padogrid/lib/
cp $PADOGRID_HOME/lib/padogrid-common*.jar padogrid/lib/
cp $PADOGRID_HOME/geode/lib/geode-addon-core*.jar padogrid/lib/
# Test jars
cp $PADOGRID_HOME/geode/plugins/geode-addon-core*.jar padogrid/plugins/

# Remove conflicting jar files
rm padogrid/lib/log4j-slf4j-*.jar

# Download Debezium MySQL connector
mvn package

popd > /dev/null

#
# Display build information
#
echo ""
echo "Workspace: $PADOGRID_WORKSPACE"
echo ""
echo "Build complete"
echo ""
